
import openai
import os
from dotenv import load_dotenv
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters

# Load environment variables
load_dotenv()

# API keys
openai.api_key = os.getenv("OPENAI_API_KEY")
TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")

# Start command
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ê—Å—Å–∞–ª–æ–º—É –∞–ª–∞–π–∫—É–º! \n\n"
        "‚úÖ –†–∞—Å–º–∏–π ELGA TAXI –º–æ–±–∏–ª –∏–ª–æ–≤–∞—Å–∏–Ω–∏ —é–∫–ª–∞–± –æ–ª–∏–Ω–≥ –≤–∞ –±—É—é—Ä—Ç–º–∞–Ω–∏ –∏–ª–æ–≤–∞ –æ—Ä“õ–∞–ª–∏ —Ç–µ–∑—Ä–æ–∫ –±–µ—Ä–∏–Ω–≥!\n"
        "üì≤ https://play.google.com/store/apps/details?id=uz.teamwork.elgataxi\n\n"
        "‚úÖ –¢–µ–∑–∫–æ—Ä –µ—Ç–∫–∞–∑–∏—à\n"
        "‚úÖ –•–∞–≤—Ñ—Å–∏–∑ “≥–∞–π–¥–æ–≤—á–∏–ª–∞—Ä\n"
        "‚úÖ 24/7 —Ö–∏–∑–º–∞—Ç"
    )

# AI response
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_message = update.message.text
    try:
        chat_completion = await openai.ChatCompletion.acreate(
            model="gpt-3.5-turbo",
            messages=[
                {"role": "system", "content": "–°–∏–∑ —Ñ–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏–ª–∞—Ä–≥–∞ —ë—Ä–¥–∞–º –±–µ—Ä—É–≤—á–∏ AI —ë—Ä–¥–∞–º—á–∏—Å–∏—Å–∏–∑."},
                {"role": "user", "content": user_message}
            ]
        )
        answer = chat_completion.choices[0].message.content
    except Exception as e:
        answer = "–ö–µ—á–∏—Ä–∞—Å–∏–∑, “≥–æ–∑–∏—Ä—á–∞ AI –∂–∞–≤–æ–± –±–µ—Ä–∞ –æ–ª–º–∞–¥–∏."
    await update.message.reply_text(answer)

# Bot runner
if __name__ == "__main__":
    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    app.run_polling()
